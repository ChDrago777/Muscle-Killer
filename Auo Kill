local expectedKey = "Tea"
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

if not LocalPlayer:FindFirstChild("KeyValidated") then
    local KeyUI = Instance.new("ScreenGui", PlayerGui)
    KeyUI.Name = "KeyUI"
    local Frame = Instance.new("Frame", KeyUI)
    Frame.Size = UDim2.new(0, 250, 0, 120)
    Frame.Position = UDim2.new(0.5, -125, 0.5, -60)
    Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    Frame.Active = true
    Frame.Draggable = true
    Instance.new("UICorner", Frame).CornerRadius = UDim.new(0, 8)
    local Box = Instance.new("TextBox", Frame)
    Box.Size = UDim2.new(1, -20, 0, 40)
    Box.Position = UDim2.new(0, 10, 0, 20)
    Box.PlaceholderText = "Enter Key..."
    Box.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    Box.TextColor3 = Color3.new(1, 1, 1)
    Box.ClearTextOnFocus = false
    Box.Font = Enum.Font.Gotham
    Box.TextSize = 16
    Instance.new("UICorner", Box).CornerRadius = UDim.new(0, 6)
    local Btn = Instance.new("TextButton", Frame)
    Btn.Size = UDim2.new(1, -20, 0, 30)
    Btn.Position = UDim2.new(0, 10, 0, 70)
    Btn.Text = "Submit"
    Btn.Font = Enum.Font.GothamBold
    Btn.TextSize = 16
    Btn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    Btn.TextColor3 = Color3.new(1, 1, 1)
    Instance.new("UICorner", Btn).CornerRadius = UDim.new(0, 6)
    local validated = false
    Btn.MouseButton1Click:Connect(function()
        if Box.Text == expectedKey then
            validated = true
            KeyUI:Destroy()
            local val = Instance.new("BoolValue", LocalPlayer)
            val.Name = "KeyValidated"
        else
            Box.Text = ""
            Box.PlaceholderText = "Invalid Key!"
        end
    end)
    repeat task.wait() until validated
end

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local muscleEvent = ReplicatedStorage:FindFirstChild("muscleEvent") or LocalPlayer:FindFirstChild("muscleEvent")
if not muscleEvent then warn("❌ muscleEvent не найден") return end

local COLORS = {
    Background = Color3.fromRGB(25, 25, 25),
    Button = Color3.fromRGB(50, 50, 50),
    ButtonActive = Color3.fromRGB(255, 50, 50),
    Text = Color3.new(1, 1, 1),
    TextBox = Color3.fromRGB(35, 35, 35)
}

local function Create(class, props)
    local inst = Instance.new(class)
    for k, v in pairs(props) do inst[k] = v end
    return inst
end

local MainGui = Create("ScreenGui", {Name = "MuscleKillerUI", Parent = PlayerGui, ResetOnSpawn = false})
local Frame = Create("Frame", {
    Parent = MainGui,
    Size = UDim2.new(0, 350, 0, 360),
    Position = UDim2.new(0.5, -175, 0.5, -180),
    BackgroundColor3 = COLORS.Background,
    BackgroundTransparency = 0.3,
    BorderSizePixel = 0,
    Active = true,
    Draggable = true,
})
Create("UICorner", {Parent = Frame, CornerRadius = UDim.new(0, 12)})
Create("TextLabel", {
    Parent = Frame,
    Size = UDim2.new(1, 0, 0, 36),
    Text = "𝐀𝐮𝐭𝐨 ㅤ𝐊𝐢𝐥𝐥 ㅤ𝐌𝐮𝐬𝐜𝐥𝐞",
    Font = Enum.Font.GothamBold,
    TextSize = 18,
    TextColor3 = COLORS.Text,
    BackgroundTransparency = 1,
})

local Content = Create("Frame", {
    Parent = Frame,
    Position = UDim2.new(0, 10, 0, 42),
    Size = UDim2.new(1, -20, 1, -52),
    BackgroundTransparency = 1,
})
Create("UIListLayout", {Parent = Content, Padding = UDim.new(0, 6), FillDirection = Enum.FillDirection.Vertical})

local WHITELIST = {}

local function IsWhitelisted(p)
    for _, name in ipairs(WHITELIST) do
        if p.Name:lower() == name:lower() or p.DisplayName:lower() == name:lower() then
            return true
        end
    end
    return false
end

local alivePlayers = {}

local function UpdateAlivePlayers()
    alivePlayers = {}
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= LocalPlayer and p.Character then
            local humanoid = p.Character:FindFirstChildOfClass("Humanoid")
            if humanoid and humanoid.Health > 0 and not IsWhitelisted(p) then
                table.insert(alivePlayers, p)
            end
        end
    end
end

Players.PlayerAdded:Connect(UpdateAlivePlayers)
Players.PlayerRemoving:Connect(UpdateAlivePlayers)
RunService.Heartbeat:Connect(UpdateAlivePlayers)

local function FastAttack(p)
    if IsWhitelisted(p) then return end
    local char = p.Character
    if not char then return end
    local root = char:FindFirstChild("HumanoidRootPart")
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    if not root or not humanoid or humanoid.Health <= 0 then return end
    local myChar = LocalPlayer.Character
    if not myChar then return end
    local rightHand = myChar:FindFirstChild("RightHand")
    local leftHand = myChar:FindFirstChild("LeftHand")
    if not rightHand or not leftHand then return end
    for i = 1, 2 do
        firetouchinterest(root, rightHand, 0)
        firetouchinterest(root, rightHand, 1)
        muscleEvent:FireServer("punch", "RightHand")
        firetouchinterest(root, leftHand, 0)
        firetouchinterest(root, leftHand, 1)
        muscleEvent:FireServer("punch", "LeftHand")
    end
end

local activeMode = nil
local attackCoroutine = nil

local function StartKillAura()
    if attackCoroutine then task.cancel(attackCoroutine) end
    attackCoroutine = task.spawn(function()
        while activeMode == "KillAura" do
            local myChar = LocalPlayer.Character
            local myRoot = myChar and myChar:FindFirstChild("HumanoidRootPart")
            if myRoot then
                local radius = tonumber(radiusBox.Text) or 75
                radius = math.clamp(radius, 75, 1000)
                for _, p in ipairs(alivePlayers) do
                    local char = p.Character
                    if char then
                        local root = char:FindFirstChild("HumanoidRootPart")
                        if root and (root.Position - myRoot.Position).Magnitude <= radius then
                            FastAttack(p)
                        end
                    end
                end
            end
            task.wait(0.01)
        end
    end)
end

local function StartAutoKill()
    if attackCoroutine then task.cancel(attackCoroutine) end
    attackCoroutine = task.spawn(function()
        while activeMode == "AutoKill" do
            for _, p in ipairs(alivePlayers) do
                FastAttack(p)
            end
            task.wait(0.01)
        end
    end)
end

local function StartAutoKillBasic()
    if attackCoroutine then task.cancel(attackCoroutine) end
    attackCoroutine = task.spawn(function()
        while activeMode == "AutoKillBasic" do
            local myChar = LocalPlayer.Character
            local myRoot = myChar and myChar:FindFirstChild("HumanoidRootPart")
            if myRoot then
                for _, p in ipairs(alivePlayers) do
                    local char = p.Character
                    if char then
                        local root = char:FindFirstChild("HumanoidRootPart")
                        if root then
                            root.CFrame = myRoot.CFrame * CFrame.new(0, 0, -2)
                            FastAttack(p)
                        end
                    end
                end
            end
            task.wait(0.01)
        end
    end)
end

local function StartKillTarget()
    if attackCoroutine then task.cancel(attackCoroutine) end
    attackCoroutine = task.spawn(function()
        while activeMode == "KillTarget" do
            local targetName = nameBox.Text
            if targetName ~= "" then
                for _, p in ipairs(alivePlayers) do
                    if p.Name:lower():find(targetName:lower()) or p.DisplayName:lower():find(targetName:lower()) then
                        FastAttack(p)
                    end
                end
            end
            task.wait(0.01)
        end
    end)
end

local spectateBox = Create("TextBox", {
    Parent = Content,
    PlaceholderText = "Spectate (Name/Display)",
    Size = UDim2.new(1, 0, 0, 30),
    BackgroundColor3 = COLORS.TextBox,
    TextColor3 = COLORS.Text,
    Font = Enum.Font.Gotham,
    TextSize = 14,
})
Create("UICorner", {Parent = spectateBox, CornerRadius = UDim.new(0, 8)})

local stopSpectateBtn = Create("TextButton", {
    Parent = Content,
    Text = "Stop Spectate",
    Size = UDim2.new(1, 0, 0, 30),
    BackgroundColor3 = COLORS.Button,
    TextColor3 = COLORS.Text,
    Font = Enum.Font.Gotham,
    TextSize = 14,
})
Create("UICorner", {Parent = stopSpectateBtn, CornerRadius = UDim.new(0, 8)})

local nameBox = Create("TextBox", {
    Parent = Content,
    PlaceholderText = "Kill Target (Name/Display)",
    Size = UDim2.new(1, 0, 0, 30),
    BackgroundColor3 = COLORS.TextBox,
    TextColor3 = COLORS.Text,
    Font = Enum.Font.Gotham,
    TextSize = 14,
})
Create("UICorner", {Parent = nameBox, CornerRadius = UDim.new(0, 8)})

local radiusBox = Create("TextBox", {
    Parent = Content,
    PlaceholderText = "Kill Aura Radius (75-1000)",
    Text = "75",
    Size = UDim2.new(1, 0, 0, 30),
    BackgroundColor3 = COLORS.TextBox,
    TextColor3 = COLORS.Text,
    Font = Enum.Font.Gotham,
    TextSize = 14,
})
Create("UICorner", {Parent = radiusBox, CornerRadius = UDim.new(0, 8)})

local whitelistBox = Create("TextBox", {
    Parent = Content,
    PlaceholderText = "Add to Whitelist (Name/Display)",
    Size = UDim2.new(1, 0, 0, 30),
    BackgroundColor3 = COLORS.TextBox,
    TextColor3 = COLORS.Text,
    Font = Enum.Font.Gotham,
    TextSize = 14,
})
Create("UICorner", {Parent = whitelistBox, CornerRadius = UDim.new(0, 8)})

local autoFriendBtn = Create("TextButton", {
    Parent = Content,
    Text = "Auto Whitelist Friends",
    Size = UDim2.new(1, 0, 0, 30),
    BackgroundColor3 = COLORS.Button,
    TextColor3 = COLORS.Text,
    Font = Enum.Font.Gotham,
    TextSize = 14,
})
Create("UICorner", {Parent = autoFriendBtn, CornerRadius = UDim.new(0, 8)})

local clearWhitelistBtn = Create("TextButton", {
    Parent = Content,
    Text = "Clear Whitelist",
    Size = UDim2.new(1, 0, 0, 30),
    BackgroundColor3 = COLORS.Button,
    TextColor3 = COLORS.Text,
    Font = Enum.Font.Gotham,
    TextSize = 14,
})
Create("UICorner", {Parent = clearWhitelistBtn, CornerRadius = UDim.new(0, 8)})

local buttons = {}

local function CreateToggle(text, mode, func)
    local btn = Create("TextButton", {
        Parent = Content,
        Text = text,
        Size = UDim2.new(1, 0, 0, 30),
        BackgroundColor3 = COLORS.Button,
        TextColor3 = COLORS.Text,
        Font = Enum.Font.Gotham,
        TextSize = 14,
    })
    Create("UICorner", {Parent = btn, CornerRadius = UDim.new(0, 8)})
    btn.MouseButton1Click:Connect(function()
        if activeMode == mode then
            activeMode = nil
            btn.BackgroundColor3 = COLORS.Button
            if attackCoroutine then task.cancel(attackCoroutine) end
        else
            for _, b in pairs(buttons) do
                b.BackgroundColor3 = COLORS.Button
            end
            activeMode = mode
            btn.BackgroundColor3 = COLORS.ButtonActive
            func()
        end
    end)
    table.insert(buttons, btn)
end

CreateToggle("Auto Kill", "AutoKill", StartAutoKill)
CreateToggle("Auto Kill Basic", "AutoKillBasic", StartAutoKillBasic)
CreateToggle("Kill Aura", "KillAura", StartKillAura)
CreateToggle("Kill Target", "KillTarget", StartKillTarget)

local lockPosBtn = Create("TextButton", {
    Parent = Content,
    Text = "Lock Position",
    Size = UDim2.new(1, 0, 0, 30),
    BackgroundColor3 = COLORS.Button,
    TextColor3 = COLORS.Text,
    Font = Enum.Font.Gotham,
    TextSize = 14,
})
Create("UICorner", {Parent = lockPosBtn, CornerRadius = UDim.new(0, 8)})

local posLock = false
local posLockConnection = nil
lockPosBtn.MouseButton1Click:Connect(function()
    posLock = not posLock
    lockPosBtn.BackgroundColor3 = posLock and COLORS.ButtonActive or COLORS.Button
    if posLockConnection then
        posLockConnection:Disconnect()
        posLockConnection = nil
    end
    if posLock then
        local char = LocalPlayer.Character
        if char then
            local root = char:FindFirstChild("HumanoidRootPart")
            if root then
                local lastPos = root.CFrame
                posLockConnection = RunService.Heartbeat:Connect(function()
                    if LocalPlayer.Character then
                        local currentRoot = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                        if currentRoot then
                            currentRoot.CFrame = lastPos
                        end
                    end
                end)
            end
        end
    end
end)

local ToggleGui = Create("ScreenGui", {Name = "MuscleKillerToggleGui", Parent = CoreGui, ResetOnSpawn = false})
local ToggleBtn = Create("TextButton", {
    Parent = ToggleGui,
    Text = "≡",
    Size = UDim2.new(0, 35, 0, 35),
    Position = UDim2.new(0, 20, 0.5, -17),
    BackgroundColor3 = Color3.fromRGB(80, 80, 80),
    BackgroundTransparency = 0.2,
    TextColor3 = Color3.new(1, 1, 1),
    Font = Enum.Font.GothamBold,
    TextSize = 18,
    ZIndex = 10,
    Draggable = true,
})
Create("UICorner", {Parent = ToggleBtn, CornerRadius = UDim.new(1, 0)})

ToggleBtn.MouseButton1Click:Connect(function()
    Frame.Visible = not Frame.Visible
end)

LocalPlayer.CharacterAdded:Connect(function(char)
    char:WaitForChild("Humanoid").Died:Connect(function()
        task.wait(1)
        LocalPlayer:LoadCharacter()
    end)
end)

whitelistBox.FocusLost:Connect(function()
    local input = whitelistBox.Text
    if input ~= "" then
        table.insert(WHITELIST, input)
        whitelistBox.Text = ""
    end
end)

autoFriendBtn.MouseButton1Click:Connect(function()
    local autoWhitelist = autoFriendBtn.BackgroundColor3 ~= COLORS.ButtonActive
    autoFriendBtn.BackgroundColor3 = autoWhitelist and COLORS.ButtonActive or COLORS.Button
    if autoWhitelist then
        for _, p in ipairs(Players:GetPlayers()) do
            if LocalPlayer:IsFriendsWith(p.UserId) then
                table.insert(WHITELIST, p.Name)
            end
        end
    end
end)

clearWhitelistBtn.MouseButton1Click:Connect(function()
